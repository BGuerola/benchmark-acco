#spring.datasource.url= url
#spring.datasource.user= user
#spring.datasource.password= user

#En spring security por defecto el nombre de usuario es USER y la contraseña que da el log
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#Para desarrollo en h2
#se destruyen los datos al finalizar
#spring.datasource.url=jdbc:h2:mem:testdb

#se mantienen los datos.
#spring.datasource.url = jdbc:h2:~/projectdb;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1
#spring.datasource.url=jdbc:h2:file:/data/demo

#PARA PRUEBAS EN LOCAL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#PARA PRODUCCIÓN EN HEROKU
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url= ${JDBC_DATABASE_URL} #jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=${JDBC_DATABASE USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.datasource.initialization-mode=always

#Enable MVC Thymeleaf view resolution.
#spring.thymeleaf.mode=HTML

spring.thymeleaf.enabled=true 
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#Check that the template exists before rendering it.
#spring.thymeleaf.check-template=true 
#Check that the templates location exists.
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.mode: LEGACYHTML5

spring.thymeleaf.cache=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=bgtrull@gmail.com
spring.mail.password=1234
spring.mail.properties.smtp.auth=true
spring.mail.properties.smtp.starttls-enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000